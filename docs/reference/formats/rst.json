[
  {
    "name": "attributes",
    "title": "Title & Author",
    "options": [
      {
        "name": "title",
        "description": "Document title"
      },
      {
        "name": "date",
        "description": "Document date"
      },
      {
        "name": "author",
        "description": "Author or authors of the document"
      },
      {
        "name": "order",
        "description": "Order for document when included in a website automatic sidebar menu."
      }
    ]
  },
  {
    "name": "options",
    "title": "Format Options",
    "options": [
      {
        "name": "brand",
        "description": "Branding information to use for this document. If a string, the path to a brand file.\nIf false, don't use branding on this document. If an object, an inline brand\ndefinition, or an object with light and dark brand paths or definitions.\n"
      },
      {
        "name": "quarto-required",
        "description": "A semver version range describing the supported quarto versions for this document\nor project.\n\nExamples:\n\n- `>= 1.1.0`: Require at least quarto version 1.1\n- `1.*`: Require any quarto versions whose major version number is 1\n"
      }
    ]
  },
  {
    "name": "toc",
    "title": "Table of Contents",
    "options": [
      {
        "name": "toc",
        "description": "Include an automatically generated table of contents (or, in\nthe case of `latex`, `context`, `docx`, `odt`,\n`opendocument`, `rst`, or `ms`, an instruction to create\none) in the output document.\n\nNote that if you are producing a PDF via `ms`, the table\nof contents will appear at the beginning of the\ndocument, before the title.  If you would prefer it to\nbe at the end of the document, use the option\n`pdf-engine-opt: --no-toc-relocation`.\n"
      },
      {
        "name": "toc-depth",
        "description": "Specify the number of section levels to include in the table of contents.\nThe default is 3\n"
      }
    ]
  },
  {
    "name": "numbering",
    "title": "Numbering",
    "options": [
      {
        "name": "number-sections",
        "description": "Number section headings rendered output. By default, sections are not numbered.\nSections with class `.unnumbered` will never be numbered, even if `number-sections`\nis specified.\n"
      },
      {
        "name": "shift-heading-level-by",
        "description": "Shift heading levels by a positive or negative integer.\nFor example, with `shift-heading-level-by: -1`, level 2\nheadings become level 1 headings, and level 3 headings\nbecome level 2 headings.  Headings cannot have a level\nless than 1, so a heading that would be shifted below level 1\nbecomes a regular paragraph.  Exception: with a shift of -N,\na level-N heading at the beginning of the document\nreplaces the metadata title.\n"
      }
    ]
  },
  {
    "name": "layout",
    "title": "Layout",
    "options": [
      {
        "name": "grid",
        "description": "Properties of the grid system used to layout Quarto HTML pages."
      }
    ]
  },
  {
    "name": "formatting",
    "title": "Formatting",
    "options": [
      {
        "name": "list-tables",
        "description": "If true, tables are formatted as RST list tables."
      }
    ]
  },
  {
    "name": "code",
    "title": "Code",
    "options": [
      {
        "name": "code-annotations",
        "description": "The style to use when displaying code annotations. Set this value\nto false to hide code annotations.\n"
      }
    ]
  },
  {
    "name": "execute",
    "title": "Execution",
    "description": "Execution options should be specified within the `execute` key. For example:\n\n```yaml\nexecute:\n  echo: false\n  warning: false\n```\n",
    "options": [
      {
        "name": "eval",
        "description": "Evaluate code cells (if `false` just echos the code into output).\n\n- `true` (default): evaluate code cell\n- `false`: don't evaluate code cell\n- `[...]`: A list of positive or negative numbers to selectively include or exclude expressions \n  (explicit inclusion/exclusion of expressions is available only when using the knitr engine)\n"
      },
      {
        "name": "echo",
        "description": "Include cell source code in rendered output.\n\n- `true` (default in most formats): include source code in output\n- `false` (default in presentation formats like `beamer`, `revealjs`, and `pptx`): do not include source code in output\n- `fenced`: in addition to echoing, include the cell delimiter as part of the output.\n- `[...]`: A list of positive or negative line numbers to selectively include or exclude lines\n  (explicit inclusion/excusion of lines is available only when using the knitr engine)\n"
      },
      {
        "name": "output",
        "description": "Include the results of executing the code in the output. Possible values:\n\n- `true`: Include results.\n- `false`: Do not include results.\n- `asis`: Treat output as raw markdown with no enclosing containers.\n"
      },
      {
        "name": "warning",
        "description": "Include warnings in rendered output."
      },
      {
        "name": "error",
        "description": "Include errors in the output (note that this implies that errors executing code\nwill not halt processing of the document).\n"
      },
      {
        "name": "include",
        "description": "Catch all for preventing any output (code or results) from being included in output.\n"
      },
      {
        "name": "cache",
        "description": "Cache results of computations (using the [knitr cache](https://yihui.org/knitr/demo/cache/) \nfor R documents, and [Jupyter Cache](https://jupyter-cache.readthedocs.io/en/latest/) \nfor Jupyter documents).\n\nNote that cache invalidation is triggered by changes in chunk source code \n(or other cache attributes you've defined). \n\n- `true`: Cache results\n- `false`: Do not cache results\n- `refresh`: Force a refresh of the cache even if has not been otherwise invalidated.\n"
      },
      {
        "name": "freeze",
        "description": "Control the re-use of previous computational output when rendering.\n\n- `true`: Never recompute previously generated computational output during a global project render\n- `false` (default): Recompute previously generated computational output\n- `auto`: Re-compute previously generated computational output only in case their source file changes\n"
      }
    ]
  },
  {
    "name": "figures",
    "title": "Figures",
    "options": [
      {
        "name": "fig-width",
        "description": "Default width for figures generated by Matplotlib or R graphics.\n\nNote that with the Jupyter engine, this option has no effect when\nprovided at the cell level; it can only be provided with\ndocument or project metadata.\n"
      },
      {
        "name": "fig-height",
        "description": "Default height for figures generated by Matplotlib or R graphics.\n\nNote that with the Jupyter engine, this option has no effect when\nprovided at the cell level; it can only be provided with\ndocument or project metadata.\n"
      },
      {
        "name": "fig-format",
        "description": "Default format for figures generated by Matplotlib or R graphics (`retina`, `png`, `jpeg`, `svg`, or `pdf`)"
      },
      {
        "name": "fig-dpi",
        "description": "Default DPI for figures generated by Matplotlib or R graphics.\n\nNote that with the Jupyter engine, this option has no effect when\nprovided at the cell level; it can only be provided with\ndocument or project metadata.\n"
      },
      {
        "name": "fig-asp",
        "description": "The aspect ratio of the plot, i.e., the ratio of height/width. When `fig-asp` is specified,\nthe height of a plot (the option `fig-height`) is calculated from `fig-width * fig-asp`.\n\nThe `fig-asp` option is only available within the knitr engine.\n"
      }
    ]
  },
  {
    "name": "tables",
    "title": "Tables",
    "options": [
      {
        "name": "df-print",
        "description": "Method used to print tables in Knitr engine documents:\n\n-  `default`: Use the default S3 method for the data frame.\n-  `kable`: Markdown table using the `knitr::kable()` function.\n-  `tibble`: Plain text table using the `tibble` package.\n-  `paged`: HTML table with paging for row and column overflow.\n\nThe default printing method is `kable`.\n"
      }
    ]
  },
  {
    "name": "references",
    "title": "References",
    "options": [
      {
        "name": "bibliography",
        "description": "Document bibliography (BibTeX or CSL). May be a single file or a list of files\n"
      },
      {
        "name": "csl",
        "description": "Citation Style Language file to use for formatting references."
      },
      {
        "name": "citeproc",
        "description": "Turn on built-in citation processing. To use this feature, you will need\nto have a document containing citations and a source of bibliographic data: \neither an external bibliography file or a list of `references` in the \ndocument's YAML metadata. You can optionally also include a `csl` \ncitation style file.\n"
      },
      {
        "name": "citation-abbreviations",
        "description": "JSON file containing abbreviations of journals that should be\nused in formatted bibliographies when `form=\"short\"` is\nspecified. The format of the file can be illustrated with an\nexample:\n\n```json\n{ \"default\": {\n    \"container-title\": {\n      \"Lloyd's Law Reports\": \"Lloyd's Rep\",\n      \"Estates Gazette\": \"EG\",\n      \"Scots Law Times\": \"SLT\"\n    }\n  }\n}\n```\n"
      }
    ]
  },
  {
    "name": "crossref",
    "title": "Cross-References",
    "options": [
      {
        "name": "crossref",
        "description": "Configuration for cross-reference labels and prefixes. See [Cross-Reference Options](https://quarto.org/docs/reference/metadata/crossref.html) for more details."
      }
    ]
  },
  {
    "name": "citation",
    "title": "Citation",
    "options": [
      {
        "name": "citation",
        "description": "Citation information for the document itself specified as [CSL](https://docs.citationstyles.org/en/stable/specification.html) \nYAML in the document front matter.\n\nFor more on supported options, see [Citation Metadata](https://quarto.org/docs/reference/metadata/citation.html).\n"
      }
    ]
  },
  {
    "name": "language",
    "title": "Language",
    "options": [
      {
        "name": "lang",
        "description": "Identifies the main language of the document using IETF language tags \n(following the [BCP 47](https://www.rfc-editor.org/info/bcp47) standard), \nsuch as `en` or `en-GB`. The [Language subtag lookup](https://r12a.github.io/app-subtags/) \ntool can look up or verify these tags. \n\nThis affects most formats, and controls hyphenation \nin PDF output when using LaTeX (through [`babel`](https://ctan.org/pkg/babel) \nand [`polyglossia`](https://ctan.org/pkg/polyglossia)) or ConTeXt.\n"
      },
      {
        "name": "language",
        "description": "YAML file containing custom language translations"
      },
      {
        "name": "dir",
        "description": "The base script direction for the document (`rtl` or `ltr`).\n\nFor bidirectional documents, native pandoc `span`s and\n`div`s with the `dir` attribute can\nbe used to override the base direction in some output\nformats.  This may not always be necessary if the final\nrenderer (e.g. the browser, when generating HTML) supports\nthe [Unicode Bidirectional Algorithm].\n\nWhen using LaTeX for bidirectional documents, only the\n`xelatex` engine is fully supported (use\n`--pdf-engine=xelatex`).\n"
      }
    ]
  },
  {
    "name": "includes",
    "title": "Includes",
    "options": [
      {
        "name": "include-before-body",
        "description": "Include contents at the beginning of the document body\n(e.g. after the `<body>` tag in HTML, or the `\\begin{document}` command\nin LaTeX).\n\nA string value or an object with key \"file\" indicates a filename whose contents are to be included\n\nAn object with key \"text\" indicates textual content to be included\n"
      },
      {
        "name": "include-after-body",
        "description": "Include content at the end of the document body immediately after the markdown content. While it will be included before the closing `</body>` tag in HTML and the `\\end{document}` command in LaTeX, this option refers to the end of the markdown content.\n\nA string value or an object with key \"file\" indicates a filename whose contents are to be included\n\nAn object with key \"text\" indicates textual content to be included\n"
      },
      {
        "name": "include-in-header",
        "description": "Include contents at the end of the header. This can\nbe used, for example, to include special CSS or JavaScript in HTML\ndocuments.\n\nA string value or an object with key \"file\" indicates a filename whose contents are to be included\n\nAn object with key \"text\" indicates textual content to be included\n"
      },
      {
        "name": "metadata-files",
        "description": "Read metadata from the supplied YAML (or JSON) files. This\noption can be used with every input format, but string scalars\nin the YAML file will always be parsed as Markdown. Generally,\nthe input will be handled the same as in YAML metadata blocks.\nValues in files specified later in the list will be preferred\nover those specified earlier. Metadata values specified inside\nthe document, or by using `-M`, overwrite values specified with\nthis option.\n"
      }
    ]
  },
  {
    "name": "render",
    "title": "Rendering",
    "options": [
      {
        "name": "from",
        "description": "Format to read from. Extensions can be individually enabled or disabled by appending +EXTENSION or -EXTENSION to the format name (e.g. markdown+emoji).\n"
      },
      {
        "name": "output-file",
        "description": "Output file to write to"
      },
      {
        "name": "output-ext",
        "description": "Extension to use for generated output file\n"
      },
      {
        "name": "template",
        "description": "Use the specified file as a custom template for the generated document.\n"
      },
      {
        "name": "template-partials",
        "description": "Include the specified files as partials accessible to the template for the generated content.\n"
      },
      {
        "name": "filters",
        "description": "Specify executables or Lua scripts to be used as a filter transforming\nthe pandoc AST after the input is parsed and before the output is written.\n"
      },
      {
        "name": "shortcodes",
        "description": "Specify Lua scripts that implement shortcode handlers\n"
      },
      {
        "name": "keep-md",
        "description": "Keep the markdown file generated by executing code"
      },
      {
        "name": "keep-ipynb",
        "description": "Keep the notebook file generated from executing code."
      },
      {
        "name": "ipynb-filters",
        "description": "Filters to pre-process ipynb files before rendering to markdown"
      },
      {
        "name": "ipynb-shell-interactivity",
        "description": "Specify which nodes should be run interactively (displaying output from expressions)\n"
      },
      {
        "name": "plotly-connected",
        "description": "If true, use the \"notebook_connected\" plotly renderer, which downloads\nits dependencies from a CDN and requires an internet connection to view.\n"
      },
      {
        "name": "extract-media",
        "description": "Extract images and other media contained in or linked from the source document to the\npath DIR, creating it if necessary, and adjust the images references in the document\nso they point to the extracted files. Media are downloaded, read from the file\nsystem, or extracted from a binary container (e.g. docx), as needed. The original\nfile paths are used if they are relative paths not containing ... Otherwise filenames\nare constructed from the SHA1 hash of the contents.\n"
      },
      {
        "name": "resource-path",
        "description": "List of paths to search for images and other resources.\n"
      },
      {
        "name": "default-image-extension",
        "description": "Specify a default extension to use when image paths/URLs have no\nextension.  This allows you to use the same source for formats that\nrequire different kinds of images.  Currently this option only affects\nthe Markdown and LaTeX readers.\n"
      },
      {
        "name": "abbreviations",
        "description": "Specifies a custom abbreviations file, with abbreviations one to a line.\nThis list is used when reading Markdown input: strings found in this list\nwill be followed by a nonbreaking space, and the period will not produce sentence-ending space in formats like LaTeX.  The strings may not contain\nspaces.\n"
      },
      {
        "name": "dpi",
        "description": "Specify the default dpi (dots per inch) value for conversion from pixels to inch/\ncentimeters and vice versa. (Technically, the correct term would be ppi: pixels per\ninch.) The default is `96`. When images contain information about dpi internally, the\nencoded value is used instead of the default specified by this option.\n"
      },
      {
        "name": "html-table-processing",
        "description": "If `none`, do not process tables in HTML input."
      }
    ]
  },
  {
    "name": "text",
    "title": "Text Output",
    "options": [
      {
        "name": "wrap",
        "description": "Determine how text is wrapped in the output (the source code, not the rendered\nversion). \n\n- `auto` (default): Pandoc will attempt to wrap lines to the column width specified by `columns` (default 72). \n- `none`: Pandoc will not wrap lines at all. \n- `preserve`: Pandoc will attempt to preserve the wrapping from the source\n  document. Where there are nonsemantic newlines in the source, there will be\n  nonsemantic newlines in the output as well.\n"
      },
      {
        "name": "columns",
        "description": "Specify length of lines in characters. This affects text wrapping in generated source\ncode (see `wrap`). It also affects calculation of column widths for plain text\ntables. \n\nFor `typst`, number of columns for body text.\n"
      },
      {
        "name": "tab-stop",
        "description": "Specify the number of spaces per tab (default is 4). Note that tabs\nwithin normal textual input are always converted to spaces. Tabs \nwithin code are also converted, however this can be disabled with\n`preserve-tabs: false`.\n"
      },
      {
        "name": "preserve-tabs",
        "description": "Preserve tabs within code instead of converting them to spaces.\n(By default, pandoc converts tabs to spaces before parsing its input.) \nNote that this will only affect tabs in literal code spans and code blocks. \nTabs in regular text are always treated as spaces.\n"
      },
      {
        "name": "eol",
        "description": "Manually specify line endings: \n\n- `crlf`: Use Windows line endings\n- `lf`: Use macOS/Linux/UNIX line endings\n- `native` (default): Use line endings appropriate to the OS on which pandoc is being run).\n"
      }
    ]
  }
]